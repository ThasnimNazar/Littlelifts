"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const adminController_1 = require("../Controllers/adminController");
const categoryController_1 = require("../Controllers/categoryController");
const adminMiddleware_1 = __importDefault(require("../Middleware/adminMiddleware"));
const adminroute = express_1.default.Router();
adminroute.post('/', adminController_1.registerAdmin);
adminroute.post('/login', adminController_1.adminLogin);
adminroute.post('/logout', adminController_1.adminLogout);
adminroute.get('/get-childcategory', adminMiddleware_1.default, categoryController_1.getAllchildCategory);
adminroute.post('/add-category', adminMiddleware_1.default, categoryController_1.addChildcategory);
adminroute.put('/edit-category/:childId', adminMiddleware_1.default, categoryController_1.editChildcategory);
adminroute.delete('/delete-category/:childId', adminMiddleware_1.default, categoryController_1.deleteChildcategory);
adminroute.get('/get-childdata/:sittingId', adminMiddleware_1.default, categoryController_1.getchildCategory);
adminroute.get('/get-sittingcategory', adminMiddleware_1.default, categoryController_1.getAllsittingCategory);
adminroute.post('/add-sittingcategory', adminMiddleware_1.default, categoryController_1.addSittingcategory);
adminroute.put('/edit-sittingcategory/:sittingId', adminMiddleware_1.default, categoryController_1.editSittingcategory);
adminroute.delete('/delete-sittingcategory/:sittingId', adminMiddleware_1.default, categoryController_1.deleteSittingcategory);
adminroute.get('/get-sittingdata/:sittingId', adminMiddleware_1.default, categoryController_1.getsittingCategory);
adminroute.get('/get-sitters', adminMiddleware_1.default, adminController_1.getSitters);
adminroute.get('/get-parent', adminMiddleware_1.default, adminController_1.getParent);
adminroute.put('/verify/:sitterId', adminMiddleware_1.default, adminController_1.verifySitter);
adminroute.put('/block-sitter/:sitterId', adminMiddleware_1.default, adminController_1.blockSitter);
adminroute.put('/unblock-sitter/:sitterId', adminMiddleware_1.default, adminController_1.unblockSitter);
adminroute.put('/block-parent/:parentId', adminMiddleware_1.default, adminController_1.blockParent);
adminroute.put('/unblock-parent/:parentId', adminMiddleware_1.default, adminController_1.unblockParent);
adminroute.post('/add-subscription', adminMiddleware_1.default, adminController_1.addSubscription);
adminroute.get('/get-subscriptions', adminMiddleware_1.default, adminController_1.getSubscriptions);
adminroute.put('/edit-subscription/:id', adminMiddleware_1.default, adminController_1.editSubscription);
adminroute.get('/get-editsubscriptions/:id', adminMiddleware_1.default, adminController_1.getEditsubscription);
adminroute.get('/get-bookings', adminMiddleware_1.default, adminController_1.getBookingHistory);
exports.default = adminroute;
