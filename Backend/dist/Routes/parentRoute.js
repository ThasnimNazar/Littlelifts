"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const parentController_1 = require("../Controllers/parentController");
const bookingController_1 = require("../Controllers/bookingController");
const categoryController_1 = require("../Controllers/categoryController");
const authMiddleware_1 = require("../Middleware/authMiddleware");
const parentroute = express_1.default.Router();
parentroute.post('/register-parent', parentController_1.registerParent);
parentroute.post('/verifyotp', parentController_1.verifyOtp);
parentroute.post('/login-parent', parentController_1.parentLogin);
parentroute.post('/forget-password', parentController_1.forgotPassword);
parentroute.post('/forget-verifyotp', authMiddleware_1.protectParent, parentController_1.parentpasswordOtp);
parentroute.post('/reset-password', authMiddleware_1.protectParent, parentController_1.resetparentPassword);
parentroute.post('/resendotp', authMiddleware_1.protectParent, parentController_1.resendOtp);
parentroute.post('/logout', parentController_1.parentLogout);
parentroute.get('/profile/:parentId', authMiddleware_1.protectParent, parentController_1.getProfile);
parentroute.get('/get-childcategory', categoryController_1.getAllchildCategory);
parentroute.get('/get-allreviews', parentController_1.getAllreviews);
parentroute.put('/edit-profile/:parentId', authMiddleware_1.protectParent, authMiddleware_1.protectParent, parentController_1.editProfile);
parentroute.get('/getsittingcat', authMiddleware_1.protectParent, categoryController_1.getAllsittingCategory);
parentroute.get('/getsitter', parentController_1.listSitter);
parentroute.post('/webhook', express_1.default.raw({ type: 'application/json' }), bookingController_1.handleStripeWebhook);
parentroute.get('/search-babysitters', authMiddleware_1.protectParent, parentController_1.searchBabysitters);
parentroute.get('/filter-ByDate', authMiddleware_1.protectParent, parentController_1.filterBabysittersByDate);
parentroute.get('/get-availabledates/:sitterId', authMiddleware_1.protectParent, parentController_1.getAvailabledates);
parentroute.get('/get-slots/:sitterId', authMiddleware_1.protectParent, parentController_1.getSlots);
parentroute.post('/checkout-session/:sitterId', authMiddleware_1.protectParent, bookingController_1.confirmBooking);
parentroute.get('/bookings/:parentId', authMiddleware_1.protectParent, parentController_1.bookingsParent);
parentroute.get('/booked-sitters/:parentId', authMiddleware_1.protectParent, bookingController_1.getBookedsitters);
parentroute.post('/createchat', authMiddleware_1.protectParent, parentController_1.createChat);
parentroute.get('/get-messages/:chatId', authMiddleware_1.protectParent, parentController_1.getMessages);
parentroute.post('/send-message', authMiddleware_1.protectParent, parentController_1.sendMessage);
// parentroute.post('/mark-seen',protectParent,markSeen)
parentroute.post('/post-review', authMiddleware_1.protectParent, parentController_1.postReview);
parentroute.get('/check-block', authMiddleware_1.protectParent, parentController_1.isBlocked);
parentroute.get('/get-subscriptions', parentController_1.getSubscription);
parentroute.post('/confirm-subscription/:subscriptionId', authMiddleware_1.protectParent, bookingController_1.confirmSubscription);
parentroute.post('/add-favourites', authMiddleware_1.protectParent, parentController_1.addFavourites);
parentroute.put('/remove-favourites/:parentId', authMiddleware_1.protectParent, parentController_1.removeFavourites);
parentroute.get('/get-favourites/:parentId', authMiddleware_1.protectParent, parentController_1.getFavourites);
parentroute.get('/get-user/:parentId', authMiddleware_1.protectParent, parentController_1.getUser);
parentroute.get('/get-reviews/:sitterId', authMiddleware_1.protectParent, parentController_1.getReviews);
parentroute.post('/getnames', authMiddleware_1.protectParent, parentController_1.getName);
parentroute.post('/last-seen/:parentId', authMiddleware_1.protectParent, parentController_1.updateLastseen);
parentroute.get('/get-lastseen', authMiddleware_1.protectParent, parentController_1.lastSeen);
parentroute.get('/get-lastmsg', authMiddleware_1.protectParent, parentController_1.getLastmessage);
parentroute.put('/update-lastseen/:parentId', authMiddleware_1.protectParent, parentController_1.updateSeen);
exports.default = parentroute;
